{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.28.0",
    "schemaVersion": 1008,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "subito-graphql!",
  "docComment": "/**\n * Library for subito micro services using GraphQL interface\n *\n * @packageDocumentation\n */\n",
  "name": "subito-graphql",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "subito-graphql!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Class",
          "canonicalReference": "subito-graphql!Abac:class",
          "docComment": "/**\n * Abstract class to implements Abac control Initialize as data sources to have context\n *\n * @example\n * ```\n * class MyAbac extends Abac {\n *   protected policies = [ EntityPolicy ];\n * }\n * ```\n *\n * Then into index.ts\n * ```\n * dataSources: () => ({\n *   abac: new MyAbac()\n * })\n * ```\n *\n * To use it:\n * ```\n * const { dataSources: { Abac } } = context;\n * Abac.EntityPolicy.create(input);\n * Abac.EntityPolicy.delete(input);\n * Abac.EntityPolicy.read(doc);\n * Abac.EntityPolicy.update(input);\n * ```\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare abstract class Abac "
            }
          ],
          "releaseTag": "Public",
          "name": "Abac",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "subito-graphql!Abac#context:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected context: "
                },
                {
                  "kind": "Content",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "context",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": true
            },
            {
              "kind": "Method",
              "canonicalReference": "subito-graphql!Abac#initialize:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initialize({ context, }?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        context: any;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ context, }",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "initialize"
            },
            {
              "kind": "Property",
              "canonicalReference": "subito-graphql!Abac#policies:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected policies: "
                },
                {
                  "kind": "Content",
                  "text": "never[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "policies",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": true
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "subito-graphql!AnyObject:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AnyObject = "
            },
            {
              "kind": "Content",
              "text": "{\n    [key: string]: any;\n    __proto__: never;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AnyObject",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "subito-graphql!DefaultCursorResolver:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DefaultCursorResolver: "
            },
            {
              "kind": "Content",
              "text": "(type: string) => {\n    cursor({ cursor }: "
            },
            {
              "kind": "Reference",
              "text": "CursorProps",
              "canonicalReference": "subito-graphql!CursorProps:type"
            },
            {
              "kind": "Content",
              "text": "): string;\n}"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "DefaultCursorResolver",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "subito-graphql!DefaultEntityResolver:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DefaultEntityResolver: "
            },
            {
              "kind": "Content",
              "text": "{\n    id(obj: "
            },
            {
              "kind": "Reference",
              "text": "AnyObject",
              "canonicalReference": "subito-graphql!AnyObject:type"
            },
            {
              "kind": "Content",
              "text": " | null, _args: any, _context: any, { parentType }: "
            },
            {
              "kind": "Reference",
              "text": "InfoProps",
              "canonicalReference": "subito-graphql!~InfoProps:type"
            },
            {
              "kind": "Content",
              "text": "): string | null;\n}"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "DefaultEntityResolver",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "subito-graphql!DefaultMutationResolver:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DefaultMutationResolver: "
            },
            {
              "kind": "Content",
              "text": "(source: string) => {\n    create({ input }: "
            },
            {
              "kind": "Reference",
              "text": "CreateProps",
              "canonicalReference": "subito-graphql!CreateProps:type"
            },
            {
              "kind": "Content",
              "text": ", context: "
            },
            {
              "kind": "Reference",
              "text": "AnyObject",
              "canonicalReference": "subito-graphql!AnyObject:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<import(\"../payloads/mutationPayload\")."
            },
            {
              "kind": "Reference",
              "text": "TPayload",
              "canonicalReference": "subito-graphql!TPayload:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    update({ "
            },
            {
              "kind": "Reference",
              "text": "input",
              "canonicalReference": "subito-graphql!~__type#input"
            },
            {
              "kind": "Content",
              "text": ": { id, values } }: "
            },
            {
              "kind": "Reference",
              "text": "UpdateProps",
              "canonicalReference": "subito-graphql!UpdateProps:type"
            },
            {
              "kind": "Content",
              "text": ", context: "
            },
            {
              "kind": "Reference",
              "text": "AnyObject",
              "canonicalReference": "subito-graphql!AnyObject:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<import(\"../payloads/mutationPayload\")."
            },
            {
              "kind": "Reference",
              "text": "TPayload",
              "canonicalReference": "subito-graphql!TPayload:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    delete({ "
            },
            {
              "kind": "Reference",
              "text": "input",
              "canonicalReference": "subito-graphql!~__type#input"
            },
            {
              "kind": "Content",
              "text": ": { id } }: "
            },
            {
              "kind": "Reference",
              "text": "DeleteProps",
              "canonicalReference": "subito-graphql!DeleteProps:type"
            },
            {
              "kind": "Content",
              "text": ", context: "
            },
            {
              "kind": "Reference",
              "text": "AnyObject",
              "canonicalReference": "subito-graphql!AnyObject:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<import(\"../payloads/mutationPayload\")."
            },
            {
              "kind": "Reference",
              "text": "TPayload",
              "canonicalReference": "subito-graphql!TPayload:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "DefaultMutationResolver",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 30
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "subito-graphql!DefaultPageInfoResolver:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DefaultPageInfoResolver: "
            },
            {
              "kind": "Content",
              "text": "(type: string) => {\n    startCursor({ startCursor }: "
            },
            {
              "kind": "Reference",
              "text": "CursorProps",
              "canonicalReference": "subito-graphql!~CursorProps:type"
            },
            {
              "kind": "Content",
              "text": "): string | null;\n    endCursor({ endCursor }: "
            },
            {
              "kind": "Reference",
              "text": "CursorProps",
              "canonicalReference": "subito-graphql!~CursorProps:type"
            },
            {
              "kind": "Content",
              "text": "): string | null;\n}"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "DefaultPageInfoResolver",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "subito-graphql!DefaultQueryResolver:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DefaultQueryResolver: "
            },
            {
              "kind": "Content",
              "text": "(source: string) => {\n    getOne({ id, type }: "
            },
            {
              "kind": "Reference",
              "text": "GetOneProps",
              "canonicalReference": "subito-graphql!GetOneProps:type"
            },
            {
              "kind": "Content",
              "text": ", context: "
            },
            {
              "kind": "Reference",
              "text": "AnyObject",
              "canonicalReference": "subito-graphql!AnyObject:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<any>;\n    getMany(args: "
            },
            {
              "kind": "Reference",
              "text": "AnyObject",
              "canonicalReference": "subito-graphql!AnyObject:type"
            },
            {
              "kind": "Content",
              "text": ", context: "
            },
            {
              "kind": "Reference",
              "text": "AnyObject",
              "canonicalReference": "subito-graphql!AnyObject:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<any>;\n    getAll(args: "
            },
            {
              "kind": "Reference",
              "text": "AnyObject",
              "canonicalReference": "subito-graphql!AnyObject:type"
            },
            {
              "kind": "Content",
              "text": ", context: "
            },
            {
              "kind": "Reference",
              "text": "AnyObject",
              "canonicalReference": "subito-graphql!AnyObject:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<any>;\n}"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "DefaultQueryResolver",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 20
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "subito-graphql!failPayload:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "failPayload: "
            },
            {
              "kind": "Content",
              "text": "({ message, data, success, code, keyData, }: "
            },
            {
              "kind": "Reference",
              "text": "TPayloadInput",
              "canonicalReference": "subito-graphql!TPayloadInput:type"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "TPayload",
              "canonicalReference": "subito-graphql!TPayload:type"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "failPayload",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "subito-graphql!GID:class",
          "docComment": "/**\n * Class use to transform local ID to base 64 globally unique ID Specs by relayjs\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class GID "
            }
          ],
          "releaseTag": "Public",
          "name": "GID",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "subito-graphql!GID.batchDecode:member(1)",
              "docComment": "/**\n * Decode an array of global ID's\n *\n * @param gid - array of GID's\n *\n * @param options - Same as {@link GID.decode}\n *\n * @returns \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static batchDecode(ids: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ", raw?: "
                },
                {
                  "kind": "Reference",
                  "text": "Boolean",
                  "canonicalReference": "!Boolean:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "(string | number | {\n        id: string | number;\n        version: number;\n        data: {};\n        type: string;\n    })[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "ids",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "raw",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "batchDecode"
            },
            {
              "kind": "Method",
              "canonicalReference": "subito-graphql!GID.decode:member(1)",
              "docComment": "/**\n * Decode a global ID\n *\n * @param gid - GID to decode\n *\n * @param options - Options to use, use forceInt = true if your local id must be an int\n *\n * @returns \n *\n * @example\n *\n * We want to build a GID to identify the third product save in cart Each cart are saved into a document containing an array of product\n * ```\n * // Prints \"12\":\n * console.log(GID.decode('xxx'));\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static decode(gid: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", raw?: "
                },
                {
                  "kind": "Reference",
                  "text": "Boolean",
                  "canonicalReference": "!Boolean:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string | number | {\n        id: string | number;\n        version: number;\n        data: {};\n        type: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "gid",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "raw",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "decode"
            },
            {
              "kind": "Method",
              "canonicalReference": "subito-graphql!GID.encode:member(1)",
              "docComment": "/**\n * Generate a globally unique id\n *\n * @param type - Type of the entity (User, Article, ...)\n *\n * @param id - ID from the local source (table, collection, ...)\n *\n * @param data - Any specific data to identify the doc source (like an array index)\n *\n * @returns A globally unique id\n *\n * @example\n *\n * We want to build a GID to identify the third product save in cart Each cart are saved into a document containing an array of product\n * ```\n * // Prints \"12\":\n * console.log(GID.encode('Cart', 'aEDl54dscc45', { product: 2 }));\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static encode(type: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string | number"
                },
                {
                  "kind": "Content",
                  "text": ", data?: "
                },
                {
                  "kind": "Reference",
                  "text": "Object",
                  "canonicalReference": "!Object:interface"
                },
                {
                  "kind": "Content",
                  "text": " | string | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "encode"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "subito-graphql!mutationPayload:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "mutationPayload: "
            },
            {
              "kind": "Content",
              "text": "(doc?: "
            },
            {
              "kind": "Reference",
              "text": "DocumentNode",
              "canonicalReference": "graphql!DocumentNode:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "TPayload",
              "canonicalReference": "subito-graphql!TPayload:type"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "mutationPayload",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "subito-graphql!successPayload:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "successPayload: "
            },
            {
              "kind": "Content",
              "text": "({ message, data, success, code, keyData, }: "
            },
            {
              "kind": "Reference",
              "text": "TPayloadInput",
              "canonicalReference": "subito-graphql!TPayloadInput:type"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "TPayload",
              "canonicalReference": "subito-graphql!TPayload:type"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "successPayload",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        }
      ]
    }
  ]
}

{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.28.0",
    "schemaVersion": 1008,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "subito-graphql!",
  "docComment": "/**\n * Library for subito micro services using GraphQL interface\n *\n * @packageDocumentation\n */\n",
  "name": "subito-graphql",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "subito-graphql!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Class",
          "canonicalReference": "subito-graphql!Abac:class",
          "docComment": "/**\n * Abstract class to implements Abac control Initialize as data sources to have context\n *\n * @example\n * ```\n * class MyAbac extends Abac {\n *   protected policies = [ EntityPolicy ];\n * }\n * ```\n *\n * Then into index.ts\n * ```\n * dataSources: () => ({\n *   abac: new MyAbac()\n * })\n * ```\n *\n * To use it:\n * ```\n * const { dataSources: { Abac } } = context;\n * Abac.EntityPolicy.create(input);\n * Abac.EntityPolicy.delete(input);\n * Abac.EntityPolicy.read(doc);\n * Abac.EntityPolicy.update(input);\n * ```\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare abstract class Abac "
            }
          ],
          "releaseTag": "Public",
          "name": "Abac",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "subito-graphql!Abac#context:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected context: "
                },
                {
                  "kind": "Content",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "context",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": true
            },
            {
              "kind": "Method",
              "canonicalReference": "subito-graphql!Abac#initialize:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initialize({ context, }?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        context: any;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ context, }",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "initialize"
            },
            {
              "kind": "Property",
              "canonicalReference": "subito-graphql!Abac#policies:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected policies: "
                },
                {
                  "kind": "Content",
                  "text": "{}"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "policies",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": true
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "subito-graphql!AnyObject:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AnyObject = "
            },
            {
              "kind": "Content",
              "text": "{\n    [key: string]: any;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AnyObject",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "subito-graphql!Code:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Code = "
            },
            {
              "kind": "Content",
              "text": "(200 | 201 | 202 | 204 | 290 | 400 | 401 | 403 | 404 | 409 | 410 | 500 | 501)"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "Code",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "subito-graphql!DefaultCursorResolver:var",
          "docComment": "/**\n * Create a generic cursor resolver\n *\n * @param type - The entity type\n *\n * @returns \n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DefaultCursorResolver: "
            },
            {
              "kind": "Content",
              "text": "(type: string) => {\n    cursor({ cursor }: "
            },
            {
              "kind": "Reference",
              "text": "CursorProps",
              "canonicalReference": "subito-graphql!CursorProps:type"
            },
            {
              "kind": "Content",
              "text": "): string;\n}"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "DefaultCursorResolver",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "subito-graphql!DefaultEntityResolver:var",
          "docComment": "/**\n * Create a generic entity resolver\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DefaultEntityResolver: "
            },
            {
              "kind": "Content",
              "text": "{\n    id(obj: "
            },
            {
              "kind": "Reference",
              "text": "AnyObject",
              "canonicalReference": "subito-graphql!AnyObject:type"
            },
            {
              "kind": "Content",
              "text": " | null, _args: any, _context: any, { parentType }: "
            },
            {
              "kind": "Reference",
              "text": "InfoProps",
              "canonicalReference": "subito-graphql!~InfoProps:type"
            },
            {
              "kind": "Content",
              "text": "): string | null;\n}"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "DefaultEntityResolver",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "subito-graphql!DefaultMutationResolver:var",
          "docComment": "/**\n * Create a generic mutation resolver\n *\n * @param source - The name of the data source\n *\n * @returns \n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DefaultMutationResolver: "
            },
            {
              "kind": "Content",
              "text": "(source: string) => {\n    create({ input }: "
            },
            {
              "kind": "Reference",
              "text": "CreateProps",
              "canonicalReference": "subito-graphql!CreateProps:type"
            },
            {
              "kind": "Content",
              "text": ", context: "
            },
            {
              "kind": "Reference",
              "text": "AnyObject",
              "canonicalReference": "subito-graphql!AnyObject:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<import(\"..\")."
            },
            {
              "kind": "Reference",
              "text": "PayloadResponse",
              "canonicalReference": "subito-graphql!PayloadResponse:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    update({ input }: "
            },
            {
              "kind": "Reference",
              "text": "UpdateProps",
              "canonicalReference": "subito-graphql!UpdateProps:type"
            },
            {
              "kind": "Content",
              "text": ", context: "
            },
            {
              "kind": "Reference",
              "text": "AnyObject",
              "canonicalReference": "subito-graphql!AnyObject:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<import(\"..\")."
            },
            {
              "kind": "Reference",
              "text": "PayloadResponse",
              "canonicalReference": "subito-graphql!PayloadResponse:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    delete({ input }: "
            },
            {
              "kind": "Reference",
              "text": "DeleteProps",
              "canonicalReference": "subito-graphql!DeleteProps:type"
            },
            {
              "kind": "Content",
              "text": ", context: "
            },
            {
              "kind": "Reference",
              "text": "AnyObject",
              "canonicalReference": "subito-graphql!AnyObject:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<import(\"..\")."
            },
            {
              "kind": "Reference",
              "text": "PayloadResponse",
              "canonicalReference": "subito-graphql!PayloadResponse:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "DefaultMutationResolver",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 26
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "subito-graphql!DefaultPageInfoResolver:var",
          "docComment": "/**\n * Create a generic page info resolver\n *\n * @param type - The entity type\n *\n * @returns \n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DefaultPageInfoResolver: "
            },
            {
              "kind": "Content",
              "text": "(type: string) => {\n    startCursor({ startCursor }: "
            },
            {
              "kind": "Reference",
              "text": "CursorProps",
              "canonicalReference": "subito-graphql!~CursorProps:type"
            },
            {
              "kind": "Content",
              "text": "): string | null;\n    endCursor({ endCursor }: "
            },
            {
              "kind": "Reference",
              "text": "CursorProps",
              "canonicalReference": "subito-graphql!~CursorProps:type"
            },
            {
              "kind": "Content",
              "text": "): string | null;\n}"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "DefaultPageInfoResolver",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "subito-graphql!DefaultQueryResolver:var",
          "docComment": "/**\n * Define default query resolvers\n *\n * Can be use as is or extended in a custom resolver\n *\n * @param source - The type of the entity to resolve\n *\n * @returns \n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DefaultQueryResolver: "
            },
            {
              "kind": "Content",
              "text": "(source: string) => {\n    getOne({ id, type }: "
            },
            {
              "kind": "Reference",
              "text": "GetOneProps",
              "canonicalReference": "subito-graphql!GetOneProps:type"
            },
            {
              "kind": "Content",
              "text": ", context: "
            },
            {
              "kind": "Reference",
              "text": "AnyObject",
              "canonicalReference": "subito-graphql!AnyObject:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<any>;\n    getMany(args: "
            },
            {
              "kind": "Reference",
              "text": "AnyObject",
              "canonicalReference": "subito-graphql!AnyObject:type"
            },
            {
              "kind": "Content",
              "text": ", context: "
            },
            {
              "kind": "Reference",
              "text": "AnyObject",
              "canonicalReference": "subito-graphql!AnyObject:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<any>;\n    getAll(args: "
            },
            {
              "kind": "Reference",
              "text": "AnyObject",
              "canonicalReference": "subito-graphql!AnyObject:type"
            },
            {
              "kind": "Content",
              "text": ", context: "
            },
            {
              "kind": "Reference",
              "text": "AnyObject",
              "canonicalReference": "subito-graphql!AnyObject:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<any>;\n}"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "DefaultQueryResolver",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 20
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "subito-graphql!Entity:class",
          "docComment": "/**\n * Class to generate a entity before returning data\n *\n * You can re-map some fields, like _id to id And keep the only fields authorized by the ABAC policy\n *\n * @example\n * ```\n * // Define which fields to remap\n * const map = {_id: 'id'};\n * // Create your entity\n * const user = new Entity(doc, map);\n * // Filter data\n * entity.keep(['id', 'firstname']);\n * // Or you can also filter data with the remove method\n * entity.remove(['email','mobile']);\n * // Then get the values\n * entity.get();\n * ```\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class Entity "
            }
          ],
          "releaseTag": "Public",
          "name": "Entity",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "subito-graphql!Entity:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Entity` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(doc: "
                },
                {
                  "kind": "Reference",
                  "text": "AnyObject",
                  "canonicalReference": "subito-graphql!AnyObject:type"
                },
                {
                  "kind": "Content",
                  "text": ", map?: "
                },
                {
                  "kind": "Reference",
                  "text": "Map",
                  "canonicalReference": "subito-graphql!Map:type"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "doc",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "map",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "subito-graphql!Entity#get:member(1)",
              "docComment": "/**\n * Get the mapped & filtered data\n *\n * @returns \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get(): "
                },
                {
                  "kind": "Reference",
                  "text": "AnyObject",
                  "canonicalReference": "subito-graphql!AnyObject:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "get"
            },
            {
              "kind": "Method",
              "canonicalReference": "subito-graphql!Entity#keep:member(1)",
              "docComment": "/**\n * Define which fields to keep in the entity\n *\n * @param fields - An array of string matching the fields to keep\n *\n * @returns \n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "keep(fields: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "keep"
            },
            {
              "kind": "Method",
              "canonicalReference": "subito-graphql!Entity#remove:member(1)",
              "docComment": "/**\n * Define which fields to remove in the entity\n *\n * @param fields - An array of string matching the fields to remove\n *\n * @returns \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "remove(fields: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "remove"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "subito-graphql!failPayload:var",
          "docComment": "/**\n * Send a failed payload\n *\n * @deprecated\n *\n * Use the new {@link payload} instead\n *\n * @param input - The payload input\n *\n * @returns \n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "failPayload: "
            },
            {
              "kind": "Content",
              "text": "({ message, data, success, code, keyData, }: "
            },
            {
              "kind": "Reference",
              "text": "TPayloadInput",
              "canonicalReference": "subito-graphql!TPayloadInput:type"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "TPayload",
              "canonicalReference": "subito-graphql!TPayload:type"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "failPayload",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "subito-graphql!GID:class",
          "docComment": "/**\n * Class use to transform local ID to base 64 globally unique ID Specs by relayjs\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class GID "
            }
          ],
          "releaseTag": "Public",
          "name": "GID",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "subito-graphql!GID.batchDecode:member(1)",
              "docComment": "/**\n * Decode an array of global ID's\n *\n * @param gid - array of GID's\n *\n * @param options - Same as {@link GID.decode}\n *\n * @returns \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static batchDecode(ids: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ", raw?: "
                },
                {
                  "kind": "Reference",
                  "text": "Boolean",
                  "canonicalReference": "!Boolean:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "(string | number | {\n        id: string | number;\n        version: number;\n        data: {};\n        type: string;\n    })[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "ids",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "raw",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "batchDecode"
            },
            {
              "kind": "Method",
              "canonicalReference": "subito-graphql!GID.decode:member(1)",
              "docComment": "/**\n * Decode a global ID\n *\n * @param gid - GID to decode\n *\n * @param options - Options to use, use forceInt = true if your local id must be an int\n *\n * @returns \n *\n * @example\n *\n * We want to build a GID to identify the third product save in cart Each cart are saved into a document containing an array of product\n * ```\n * // Prints \"12\":\n * console.log(GID.decode('xxx'));\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static decode(gid: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", raw?: "
                },
                {
                  "kind": "Reference",
                  "text": "Boolean",
                  "canonicalReference": "!Boolean:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string | number | {\n        id: string | number;\n        version: number;\n        data: {};\n        type: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "gid",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "raw",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "decode"
            },
            {
              "kind": "Method",
              "canonicalReference": "subito-graphql!GID.encode:member(1)",
              "docComment": "/**\n * Generate a globally unique id\n *\n * @param type - Type of the entity (User, Article, ...)\n *\n * @param id - ID from the local source (table, collection, ...)\n *\n * @param data - Any specific data to identify the doc source (like an array index)\n *\n * @returns A globally unique id\n *\n * @example\n *\n * We want to build a GID to identify the third product save in cart Each cart are saved into a document containing an array of product\n * ```\n * // Prints \"12\":\n * console.log(GID.encode('Cart', 'aEDl54dscc45', { product: 2 }));\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static encode(type: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string | number"
                },
                {
                  "kind": "Content",
                  "text": ", data?: "
                },
                {
                  "kind": "Reference",
                  "text": "Object",
                  "canonicalReference": "!Object:interface"
                },
                {
                  "kind": "Content",
                  "text": " | string | number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "encode"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "subito-graphql!Message:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Message = "
            },
            {
              "kind": "Content",
              "text": "{\n    [key: number]: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "Message",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "subito-graphql!message:var",
          "docComment": "/**\n * List of http message\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "message: "
            },
            {
              "kind": "Reference",
              "text": "Message",
              "canonicalReference": "subito-graphql!Message:type"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "message",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "subito-graphql!mutationPayload:var",
          "docComment": "/**\n * Send a mutation payload\n *\n * @deprecated\n *\n * Use the new {@link payload} instead\n *\n * @param doc - The mutated doc\n *\n * @returns \n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "mutationPayload: "
            },
            {
              "kind": "Content",
              "text": "(doc?: "
            },
            {
              "kind": "Reference",
              "text": "DocumentNode",
              "canonicalReference": "graphql!DocumentNode:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "TPayload",
              "canonicalReference": "subito-graphql!TPayload:type"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "mutationPayload",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "subito-graphql!payload:var",
          "docComment": "/**\n * Send a success payload\n *\n * @param input - The payload input\n *\n * @returns \n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "payload: "
            },
            {
              "kind": "Content",
              "text": "({ message, data, code, keyData, }: "
            },
            {
              "kind": "Reference",
              "text": "PayloadInput",
              "canonicalReference": "subito-graphql!PayloadInput:type"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "PayloadResponse",
              "canonicalReference": "subito-graphql!PayloadResponse:type"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "payload",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "subito-graphql!PayloadInput:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PayloadInput = "
            },
            {
              "kind": "Content",
              "text": "{\n    message?: string;\n    data?: any;\n    code?: number;\n    keyData?: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "PayloadInput",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "subito-graphql!PayloadResponse:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PayloadResponse = "
            },
            {
              "kind": "Content",
              "text": "{\n    message: string;\n    success: boolean;\n    code: number;\n    [keyData: string]: any;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "PayloadResponse",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "subito-graphql!Policy:class",
          "docComment": "/**\n * Abstract class to implements Abac policy control\n *\n * @example\n * ```\n * class EntityPolicy extends Policy {\n *   read({ doc }) {\n *     if(this.hasRole['ADMIN']) {\n *       return doc;\n *     }\n *     return null;\n *   }\n * }\n * ```\n *\n * Then into a resolver\n * ```\n * const { dataSources: { Abac } } = context;\n * Abac.EntityPolicy.read({ doc });\n * ```\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare abstract class Policy "
            }
          ],
          "releaseTag": "Public",
          "name": "Policy",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "subito-graphql!Policy:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Policy` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor({ viewer, gateway }: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        viewer: any;\n        gateway: any;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ viewer, gateway }",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "subito-graphql!Policy#create:member(1)",
              "docComment": "/**\n * Check if a doc can be create, then throw if not\n *\n * @returns \n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "create(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "create"
            },
            {
              "kind": "Method",
              "canonicalReference": "subito-graphql!Policy#delete:member(1)",
              "docComment": "/**\n * Check if a doc can be deleted, then throw if not\n *\n * @returns \n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "delete(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "delete"
            },
            {
              "kind": "Property",
              "canonicalReference": "subito-graphql!Policy#gateway:member",
              "docComment": "/**\n * The current gateway\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected gateway: "
                },
                {
                  "kind": "Content",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "gateway",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": true
            },
            {
              "kind": "Method",
              "canonicalReference": "subito-graphql!Policy#hasRole:member(1)",
              "docComment": "/**\n * Check if the current user has a role\n *\n * @param role - The role to check\n *\n * @returns \n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected hasRole(role: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "role",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "hasRole"
            },
            {
              "kind": "Method",
              "canonicalReference": "subito-graphql!Policy#isAdmin:member(1)",
              "docComment": "/**\n * Check if the user is an admin\n *\n * @remarks\n *\n * Shotcut to hasRole() method\n *\n * @returns \n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected isAdmin(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "isAdmin"
            },
            {
              "kind": "Method",
              "canonicalReference": "subito-graphql!Policy#read:member(1)",
              "docComment": "/**\n * Read a doc\n *\n * @param doc - the doc to read\n *\n * @returns \n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "read(doc: "
                },
                {
                  "kind": "Reference",
                  "text": "AnyObject",
                  "canonicalReference": "subito-graphql!AnyObject:type"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "AnyObject",
                  "canonicalReference": "subito-graphql!AnyObject:type"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "doc",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "read"
            },
            {
              "kind": "Method",
              "canonicalReference": "subito-graphql!Policy#readMany:member(1)",
              "docComment": "/**\n * Read an array of docs\n *\n * @param docs - The docs to read\n *\n * @param keepNull - If you want to keep a null entry if the doc is not allowed\n *\n * @returns \n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readMany(docs: "
                },
                {
                  "kind": "Reference",
                  "text": "AnyObject",
                  "canonicalReference": "subito-graphql!AnyObject:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", keepNull?: "
                },
                {
                  "kind": "Content",
                  "text": "true"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "AnyObject",
                  "canonicalReference": "subito-graphql!AnyObject:type"
                },
                {
                  "kind": "Content",
                  "text": " | null)[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "docs",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "keepNull",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "readMany"
            },
            {
              "kind": "Method",
              "canonicalReference": "subito-graphql!Policy#readManyByCursor:member(1)",
              "docComment": "/**\n * Read a list of doc listed by cursor\n *\n * @param docs - The list of docs\n *\n * @returns \n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readManyByCursor(docs: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadManyByCursorInput",
                  "canonicalReference": "subito-graphql!ReadManyByCursorInput:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        edges: {\n            cursor: string;\n            node: "
                },
                {
                  "kind": "Reference",
                  "text": "AnyObject",
                  "canonicalReference": "subito-graphql!AnyObject:type"
                },
                {
                  "kind": "Content",
                  "text": " | null;\n        }[];\n        pageInfo: {\n            hasNextPage: boolean;\n            hasPreviousPage: boolean;\n            totalPage: number;\n            totalResults: number;\n            currentPage: number;\n            startCursor: string;\n            endCursor: string;\n        } | null;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "docs",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "readManyByCursor"
            },
            {
              "kind": "Method",
              "canonicalReference": "subito-graphql!Policy#update:member(1)",
              "docComment": "/**\n * Check if a doc can be updated, then throw if not\n *\n * @returns \n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "update(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "update"
            },
            {
              "kind": "Property",
              "canonicalReference": "subito-graphql!Policy#viewer:member",
              "docComment": "/**\n * The current viewer\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected viewer: "
                },
                {
                  "kind": "Reference",
                  "text": "AnyObject",
                  "canonicalReference": "subito-graphql!AnyObject:type"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "viewer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": true
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "subito-graphql!Repository:class",
          "docComment": "/**\n * Abstract class repository\n *\n * @remarks\n *\n * Use this abstract class when you create a new repository TODO: Handle cache\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare abstract class Repository extends "
            },
            {
              "kind": "Reference",
              "text": "DataSource",
              "canonicalReference": "apollo-datasource!DataSource:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Context",
              "canonicalReference": "subito-lib!Context:type"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "Repository",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "subito-graphql!Repository#context:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected context: "
                },
                {
                  "kind": "Reference",
                  "text": "Context",
                  "canonicalReference": "subito-lib!Context:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "context",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": true
            },
            {
              "kind": "Method",
              "canonicalReference": "subito-graphql!Repository#initialize:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initialize({ context, }?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [key: string]: any;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ context, }",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "initialize"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "subito-graphql!successPayload:var",
          "docComment": "/**\n * Send a success payload\n *\n * @deprecated\n *\n * Use the new {@link payload} instead\n *\n * @param input - The payload input\n *\n * @returns \n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "successPayload: "
            },
            {
              "kind": "Content",
              "text": "({ message, data, success, code, keyData, }: "
            },
            {
              "kind": "Reference",
              "text": "TPayloadInput",
              "canonicalReference": "subito-graphql!TPayloadInput:type"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "TPayload",
              "canonicalReference": "subito-graphql!TPayload:type"
            }
          ],
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "successPayload",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        }
      ]
    }
  ]
}
